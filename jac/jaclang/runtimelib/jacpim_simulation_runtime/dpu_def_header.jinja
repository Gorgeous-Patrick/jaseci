#include <stdint.h>
#include <stdio.h>
#include <defs.h>
#include <mram.h>
#include <alloc.h>
#include <perfcounter.h>
#include <barrier.h>

// #define DEBUG


typedef struct __Metadata {
  {{metadata_definition}}
} Metadata;



typedef struct __ContainerObject{
{{container_object_definition}}
} ContainerObject;


{% for node_type in node_types %}
typedef struct __{{node_type.name}} {
{{node_type.definition}}
} {{node_type.name}};
{% endfor %}

{% for walker_type in walker_types %}
typedef struct __{{walker_type.name}} {
{{walker_type.definition}}
} {{walker_type.name}};
{% endfor %}
{% for run_ability_function in run_ability_functions %}
void {{run_ability_function.full_name()}} ({{run_ability_function.node_type.name}} *node, uint32_t node_id, {{run_ability_function.walker_type.name}}* walker) {
{{run_ability_function.body}}
}
{% endfor %}


inline void mem_init() {
    node_buffer = mem_alloc({{max_node_size}});
    walker_buffer = mem_alloc({{max_walker_size}});
}